<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--开启注解扫描 希望处理 controller, service和dao给Spring处理
        applicationContext.xml配置dao和service
        springmvc.xml配置controller
    -->
    <context:component-scan base-package="Cn.Lei.Controller"></context:component-scan>


    <!--视图解析器-->
    <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--视图目录-->
        <property name="prefix" value="/pages/"></property>
        <!--视图后缀-->
        <property name="suffix" value=".jsp"></property>
    </bean>


    <!--配置前端控制器 哪些静态资源不被拦截  图片和css以及其他的也是这样配置的-->
    <!--    <mvc:resources location="/css/" mapping="/css/**" />-->
    <!--    <mvc:resources location="/img/" mapping="/img/**" />-->
    <!--    <mvc:resources location="/js/" mapping="/js/**" />-->
    <!--    <mvc:resources location="/plugins/" mapping="/plugins/**" />-->

    <!--静态资源放行 明天测试一下这个  测试结果是可行的-->
    <mvc:default-servlet-handler></mvc:default-servlet-handler>


    <!--配置自定义类型转换器
      最后在开启spring注解哪里添加以下  让配置生效
      配置后会将网页添加的时间自动转为数据库需要的时间格式
      conversion-service="conversionServiceFactoryBean
  -->
    <bean id="conversionServiceFactoryBean" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="Cn.Lei.Utils.StringToDateConverter"></bean>
            </set>
        </property>
    </bean>

    <!--开启spring mvc注解支持 RequestMapping等
   相当于自动配置了处理器映射器，处理器，处理器配置器
   -->
    <mvc:annotation-driven conversion-service="conversionServiceFactoryBean"/>

    <!--
		支持AOP的注解支持，AOP底层使用代理技术
		JDK动态代理，要求必须有接口
		cglib代理，生成子类对象，proxy-target-class="true" 默认使用cglib的方式
	-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

</beans>